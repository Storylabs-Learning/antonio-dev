name: Docker image

# trigger

on:
  push:
    branches: ["stage"]

env:
  REGISTRY: cachac
  IMAGE_NAME: kubelabs_publicapi
  OPS_BRANCH: main
  OPS_REPO: Storylabs-Learning/antonio-ops
  

jobs: 
  build: 
    runs-on: ubuntu-latest

    outputs:
      RELEASE_VERSION: ${{ steps.tagVersion.outputs.RELEASE_VERSION }}

    steps: 
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
         
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}


      - name: Check Scan
        run: echo "SONAR_STATUS=$(curl  --header 'Authorization: Bearer ${{ secrets.SONAR_TOKEN}}' https://sonarcloud.io/api/qualitygates/project_status\?projectKey\=${{ secrets.PROJECT_KEY }} | jq -r '.projectStatus.status')" >> $GITHUB_ENV
        

      #- name: Get TAG version
      #  run: echo "RELEASE_VERSION=$(git tag  --sort=-creatordate | head -1)" >> $GITHUB_ENV

      - name: Get COMMIT version
        run: echo "RELEASE_VERSION=$(git rev-parse --short HEAD)" >> $GITHUB_ENV
        
        
      - name: Show new tag
        id: tagVersion
        run: |
          echo ${{ env.RELEASE_VERSION }}
          echo "RELEASE_VERSION=${{ env.RELEASE_VERSION }}" >> $GITHUB_OUTPUT         
      
      - name: Login to Dockerhub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build & Push
        uses: docker/build-push-action@v3
        with: 
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.RELEASE_VERSION }}
          build-args: |
            APP_ENV=${{ secrets.APP_ENV }}

  deploy:
    runs-on: ubuntu-latest
    needs: build

    env: 
      VERSION: ${{ needs.build.outputs.RELEASE_VERSION }}
    
    steps:
      - name: Show new tag
        id: tagVersion
        run: |
          echo ${{ env.VERSION }}

      - name: Checkout OPS code
        uses: actions/checkout@v3
        with:
          repository: ${{ env.OPS_REPO }}
          ssh-key: ${{ secrets.OPS_TOKEN }}

      - name: Setup Kustomize
        uses: imranismail/setup-kustomize@v2
        with:
          kustomize-version: "3.6.1"

      - name: update Kubernetes resource
        run: |
          echo ${{ env.RELEASE_VERSION }}
          echo version tag
          echo ${{ env.VERSION }}

          cd public-api/overlays/stage
          kustomize edit set image KUSTOMIZE-DEFINED=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.VERSION }}

          # OPCIONAL
          kustomize build . > app.yaml
          cat app.yaml

      - name: Commit files
        run: |
          git config --local user.email "deploy-bot@storylabs.dev"
          git config --local user.name "Storylabs deploy-bot"

          git add .
          git diff-index --quiet HEAD || git commit -am "New image version. Branch staging. tag: ${{ env.VERSION }}"
          git push --force origin ${{ env.OPS_BRANCH }}

      

      
        
